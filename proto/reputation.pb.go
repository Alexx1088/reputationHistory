// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/reputation.proto

package reputationpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action        string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	ScoreChange   int32                  `protobuf:"varint,3,opt,name=score_change,json=scoreChange,proto3" json:"score_change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntryRequest) Reset() {
	*x = AddEntryRequest{}
	mi := &file_proto_reputation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntryRequest) ProtoMessage() {}

func (x *AddEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reputation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntryRequest.ProtoReflect.Descriptor instead.
func (*AddEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_reputation_proto_rawDescGZIP(), []int{0}
}

func (x *AddEntryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddEntryRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AddEntryRequest) GetScoreChange() int32 {
	if x != nil {
		return x.ScoreChange
	}
	return 0
}

type AddEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntryResponse) Reset() {
	*x = AddEntryResponse{}
	mi := &file_proto_reputation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntryResponse) ProtoMessage() {}

func (x *AddEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reputation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntryResponse.ProtoReflect.Descriptor instead.
func (*AddEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_reputation_proto_rawDescGZIP(), []int{1}
}

func (x *AddEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_reputation_proto protoreflect.FileDescriptor

const file_proto_reputation_proto_rawDesc = "" +
	"\n" +
	"\x16proto/reputation.proto\x12\n" +
	"reputation\"e\n" +
	"\x0fAddEntryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12!\n" +
	"\fscore_change\x18\x03 \x01(\x05R\vscoreChange\",\n" +
	"\x10AddEntryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2Z\n" +
	"\x11ReputationService\x12E\n" +
	"\bAddEntry\x12\x1b.reputation.AddEntryRequest\x1a\x1c.reputation.AddEntryResponseB;Z9github.com/Alexx1088/reputationhistory/proto/reputationpbb\x06proto3"

var (
	file_proto_reputation_proto_rawDescOnce sync.Once
	file_proto_reputation_proto_rawDescData []byte
)

func file_proto_reputation_proto_rawDescGZIP() []byte {
	file_proto_reputation_proto_rawDescOnce.Do(func() {
		file_proto_reputation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_reputation_proto_rawDesc), len(file_proto_reputation_proto_rawDesc)))
	})
	return file_proto_reputation_proto_rawDescData
}

var file_proto_reputation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_reputation_proto_goTypes = []any{
	(*AddEntryRequest)(nil),  // 0: reputation.AddEntryRequest
	(*AddEntryResponse)(nil), // 1: reputation.AddEntryResponse
}
var file_proto_reputation_proto_depIdxs = []int32{
	0, // 0: reputation.ReputationService.AddEntry:input_type -> reputation.AddEntryRequest
	1, // 1: reputation.ReputationService.AddEntry:output_type -> reputation.AddEntryResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_reputation_proto_init() }
func file_proto_reputation_proto_init() {
	if File_proto_reputation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_reputation_proto_rawDesc), len(file_proto_reputation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_reputation_proto_goTypes,
		DependencyIndexes: file_proto_reputation_proto_depIdxs,
		MessageInfos:      file_proto_reputation_proto_msgTypes,
	}.Build()
	File_proto_reputation_proto = out.File
	file_proto_reputation_proto_goTypes = nil
	file_proto_reputation_proto_depIdxs = nil
}
